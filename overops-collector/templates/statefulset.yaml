{{- if  .Values.persistence.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "overops-collector.fullname" . }}
  labels:
    {{- include "overops-collector.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "overops-collector.fullname" . }}-headless
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "overops-collector.selectorLabels" . | nindent 6 }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}  
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "overops-collector.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ include "overops-collector.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: collector
              containerPort: 6060
              protocol: TCP

          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: collector
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          {{- end }}  

          volumeMounts:
            - mountPath: /opt/takipi/private
              name: overops-private-volume
            {{- if .Values.persistence.enabled }}
            - mountPath: /opt/takipi/work
              name: data
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      volumes:
        - name: overops-private-volume
          configMap:
            name: {{ template "overops-collector.fullname" . }}
            items:
            {{- if .Values.overops.serviceKey  }}
            - key: installation.key
              path: installation.key
            {{- end }}
            {{- if .Values.overops.installToken  }}
            - key: installation.token
              path: installation.token
            {{- end }}
            - key: collector.properties
              path: collector.properties

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations  }}
        annotations:
          {{ toYaml . | indent 10 }}
      {{- end }}
        labels:
          {{- include "overops-collector.labels" . | nindent 10 }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
{{- end }}