apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "overops-receiver-server.fullname" . }}
  labels:
    {{- if eq .Values.overops.target "fargate" }}
    target: fargate
    {{- end }}
    {{- include "overops-receiver-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- if eq .Values.overops.target "fargate" }}
      target: fargate
      {{- end }}
      {{- include "overops-receiver-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- if eq .Values.overops.target "fargate" }}
        target: fargate
        {{- end }}
        {{- include "overops-receiver-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "overops-receiver-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.overops.agentSidecar.enabled }}
      initContainers:
        - name: overops-agent-sidecar
          image: "{{ .Values.overops.agentSidecar.repository }}:{{ .Values.overops.agentSidecar.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.overops.agentSidecar.pullPolicy }}
          volumeMounts:
          - name: overops-agent
            mountPath: /opt/overops-agent
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: OVEROPS_RECEIVER_TYPE
              value: {{ .Values.overops.type | quote }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "overops-receiver-server.secretName" . }}
                  key: db-password
            - name: RMQ_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "overops-receiver-server.secretName" . }}
                  key: rmq-password
            {{- if .Values.overops.agentSidecar.enabled }}
            - name: TAKIPI_COLLECTOR_URL
              value: {{ .Values.overops.agentSidecar.collectorURL | quote }}
            - name: TAKIPI_APPLICATION_NAME
              value: {{ .Values.overops.agentSidecar.applicationName | quote }}
            - name: TAKIPI_DEPLOYMENT_NAME
              value: {{ .Values.overops.agentSidecar.deploymentName | quote }}
            - name: TAKIPI_SERVER_NAME
              value: {{ .Values.overops.agentSidecar.serverName | quote }}
            - name: TAKIPI_PROPERTIES_FILE
              value: "/opt/overops/private/agent.properties"
            - name: TAKIPI_ENV_ID
              value: {{ .Values.overops.agentSidecar.environmentName | quote }}
            - name: JAVA_TOOL_OPTIONS
              {{- if .Values.overops.agentSidecar.useDebug }}
              value: "-agentpath:/opt/overops-agent/takipi/lib/libTakipiAgent.so=takipi.debug.logconsole"
              {{- else }}
              value: "-agentpath:/opt/overops-agent/takipi/lib/libTakipiAgent.so"
              {{- end }}
            {{- end }}

          resources:
            {{- if and (eq .Values.overops.target "fargate") (eq .Values.overops.rabbitQueue.type "decompile") }}
            requests:
              cpu: 1
              memory: "1024Mi"
            limits:
              memory: "2048Mi"
            {{- else if eq .Values.overops.target "fargate" }}
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              memory: "1024Mi"
            {{- else }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{- end }}
          volumeMounts:
            - mountPath: /opt/overops/private
              name: overops-private
            {{- if .Values.overops.agentSidecar.enabled }}
            - name: overops-agent
              mountPath: /opt/overops-agent
            {{- end }}

      volumes:
        - name: overops-private
          configMap:
            name: {{ template "overops-receiver-server.fullname" . }}-config
            items:
              {{- if .Values.overops.agentSidecar.enabled }}
              - key: agent.properties
                path: agent.proprties
              {{- end }}
              - key: application.properties
                path: application.properties
              - key: application-mysql.properties
                path: application-mysql.properties
              - key: application-msg_rabbit.properties
                path: application-msg_rabbit.properties
        {{- if .Values.overops.agentSidecar.enabled }}
        - name: overops-agent
          emptyDir: {}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
